os: Visual Studio 2015

# Skip build on normal pushes
skip_non_tags: true

artifacts:
  - path: godot\bin\*.exe
    name: GodotBinary
  - path: godot\bin\*.lib
    name: GodotLib

environment:
  PYTHON: C:\Python27
#  BUILD_REVISION: official
  BUILD_REVISION: build2
  ANGLE_SRC_PATH: C:\projects\godot-builds\angle
  matrix:
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: yes
      TARGET: release_debug
      ARCH: amd64
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: yes
      TARGET: release_debug
      ARCH: x86
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: no
      TARGET: release
      ARCH: amd64
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: no
      TARGET: release_debug
      ARCH: amd64
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: no
      TARGET: release
      ARCH: x86
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: windows
      TOOLS: no
      TARGET: release_debug
      ARCH: x86
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release
      ARCH: amd64
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release_debug
      ARCH: amd64
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release
      ARCH: x86
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release_debug
      ARCH: x86
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release
      ARCH: amd64_arm
    - VS: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat
      GD_PLATFORM: uwp
      TOOLS: no
      TARGET: release_debug
      ARCH: amd64_arm

install:
  - SET "PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"
  - pip install --egg scons  # it will fail on AppVeyor without --egg flag
  - if defined VS call "%VS%" %ARCH%  # if defined - so we can also use mingw
  - git submodule update --init --recursive # download submodules
  - ps: Start-FileDownload https://github.com/GodotBuilder/godot-builds/releases/download/_tools/angle.7z
  - 7z x angle.7z
  - ps: >-
      If ($env:Platform -Match "x86") {
        Start-FileDownload https://download.mono-project.com/archive/5.4.0/windows-installer/mono-5.4.0.201-gtksharp-2.12.45-win32-0.msi
        Start-Process msiexec.exe -Wait -ArgumentList '/qn /i C:\projects\godot-builds\mono-5.4.0.201-gtksharp-2.12.45-win32-0.msi'
      } Else { # 64-bit
        Start-FileDownload https://download.mono-project.com/archive/5.4.0/windows-installer/mono-5.4.0.201-x64-0.msi
        Start-Process msiexec.exe -Wait -ArgumentList '/qn /i C:\projects\godot-builds\mono-5.4.0.201-x64-0.msi'
      }

before_build:
  - echo %BUILD_REVISION%
  - echo %GD_PLATFORM%
  - python --version
  - scons --version
  - cl.exe
  - C:\Program Files\Mono\bin\mono.exe --version

build_script:
  - cd godot
  - for /f %%p in ('dir /b ..\patches') do git apply ..\patches\%%p
  - ps: Start-FileDownload https://github.com/GodotBuilder/godot-builds/releases/download/$(%APPVEYOR_REPO_TAG_NAME%)/mono_glue.gen.cpp
  - mv mono_glue.gen.cpp modules\mono\glue\
  - scons progress=no platform=%GD_PLATFORM% target=%TARGET% tools=%TOOLS% module_mono_enabled=yes

deploy:
  description: 'Godot binaries deployed by Travis CI and AppVeyor'
  provider: GitHub
  auth_token:
    secure: DYTTAkQFPIDq2YL6hPMOttlHdJ9ZL6dYdOtGFIEneO8BTYx6keJRvewsdzgP2QGA
  artifact: GodotBinary, GodotLib
  on:
    appveyor_repo_tag: true
